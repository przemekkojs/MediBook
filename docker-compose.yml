version: '3.8'

services:
  elb:
    image: haproxy
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "443"
    networks:
      mynet:
        aliases:
          - medibook.pl
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
      - ./ssl://etc/ssl/private

#  coredns:
#    image: coredns/coredns:1.11.1
#    container_name: coredns
#    volumes:
#      - ./Corefile:/etc/Corefile
#    command: -conf /etc/Corefile/Corefile
#    ports:
#      - "5353:53/udp"
#      - "5353:53/tcp"
#    restart: unless-stopped


  main-db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${MAIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${MAIN_DB_PASSWORD}
      POSTGRES_DB: ${MAIN_DB_NAME}
    expose:
      - "${MAIN_DB_PORT}"
    ports:
      - "${MAIN_DB_PORT}:${MAIN_DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command:
      - postgres
      - -p ${MAIN_DB_PORT}
    networks:
      - mynet
    volumes:
      - main-data:/var/lib/postgresql/data
#      - ./postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf
#      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
#      - ./ssl/domain.crt:/var/lib/postgresql/domain.crt:ro
#      - ./ssl/domain.key:/var/lib/postgresql/domain.key:ro

  authorization-db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${AUTHORIZATION_DB_USERNAME}
      POSTGRES_PASSWORD: ${AUTHORIZATION_DB_PASSWORD}
      POSTGRES_DB: ${AUTHORIZATION_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "${AUTHORIZATION_DB_PORT}"
    ports:
      - "${AUTHORIZATION_DB_PORT}:${AUTHORIZATION_DB_PORT}"
    command: -p ${AUTHORIZATION_DB_PORT}
    networks:
      - mynet
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - ./ssl:/etc/ssl
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    environment:
      RABBITMQ_LOGS: "-"
      RABBITMQ_SASL_LOGS: "-"

    ports:
      - "5671:5671"
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
    networks:
      - mynet

  notification-service:
    build: ./NotificationService
    environment:
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: ${RABBIT_MQ_PORT}
      RABBIT_MQ_USERNAME: ${RABBIT_MQ_USERNAME}
      RABBIT_MQ_PASSWORD: ${RABBIT_MQ_PASSWORD}
    depends_on:
      - rabbitmq
    networks:
      - mynet

  keycloak-web:
    build: ./Keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://authorization-db:${AUTHORIZATION_DB_PORT}/${AUTHORIZATION_DB_NAME}
      KC_DB_USERNAME: ${AUTHORIZATION_DB_USERNAME}
      KC_DB_PASSWORD: ${AUTHORIZATION_DB_PASSWORD}

      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_PROXY: "https://medibook.pl/"
      KC_PROXY_TRUSTED_ADDRESSES: "https://medibook.pl/"
      KC_SERVICE_FQDN: keycloak
      KC_PROXY_ADDRESS_FORWARDING: true
      KC_PROXY_HEADERS: "xforwarded"
      KEYCLOAK_FRONTEND_URL: "https://medibook.pl/oauth/"
      KC_HOSTNAME_URL: "https://medibook.pl/oauth/"
      KC_HOSTNAME_ADMIN_URL: "https://medibook.pl:8084/oauth/"

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"

      KEYCLOAK_ADMIN: ${KEYCLOAK_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}

      KK_TO_RMQ_URL: rabbitmq
      KK_TO_RMQ_VHOST: /
      KK_TO_RMQ_PORT: ${RABBIT_MQ_PORT}
      KK_TO_RMQ_USERNAME: ${RABBIT_MQ_USERNAME}
      KK_TO_RMQ_PASSWORD: ${RABBIT_MQ_PASSWORD}
      KK_TO_RMQ_EXCHANGE: keycloak-notification

    command: start-dev --verbose -Dkeycloak.profile.feature.upload_scripts=enabled  --http-port=8083 --https-port=8084 --http-relative-path=\oauth --https-certificate-file=/etc/ssl/private/domain.crt --https-certificate-key-file=/etc/ssl/private/domain.key --hostname-strict-backchannel=true
    depends_on:
      - authorization-db
    volumes:
      - ./ssl:/etc/ssl/private
    ports:
      - "8083:8083"
      - "8084:8084"
    networks:
      - mynet

  main-service:
    build: ./MainService
    environment:
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: ${RABBIT_MQ_PORT}
      RABBIT_MQ_USERNAME: ${RABBIT_MQ_USERNAME}
      RABBIT_MQ_PASSWORD: ${RABBIT_MQ_PASSWORD}
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}
      MAIN_DB_PORT: ${MAIN_DB_PORT}
      DB_HOSTNAME: main-db
      MAIN_DB_NAME: ${MAIN_DB_NAME}
      MAIN_APP_PORT: ${MAIN_APP_PORT}
      ISSUER_URI: https://medibook.pl
      ISSUER_REALM: client
      CLIENT_REALM: client
      DOCTOR_REALM: doctor
    ports:
      - "8081:8081"
    volumes:
      - ./ssl:/etc/ssl/private
    depends_on:
      - main-db
      - rabbitmq
      - keycloak-web
    networks:
      - mynet

networks:
  mynet:

volumes:
  main-data:
  auth-db-data:
